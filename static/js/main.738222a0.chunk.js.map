{"version":3,"sources":["style.ts","assets/otoshi-dama.png","constants/common.ts","constants/pages.ts","components/organisms/common/g-nav.tsx","components/organisms/common/footer.tsx","components/organisms/common/header.tsx","constants/about.ts","constants/url.ts","components/pages/about.tsx","constants/contact.ts","components/atoms/button.tsx","components/atoms/input.tsx","components/atoms/text-area.tsx","components/pages/contact.tsx","assets/grandpa.jpg","constants/home.ts","components/pages/home.tsx","constants/input-check.ts","constants/service.ts","components/molecules/text-view-list.tsx","components/pages/service-check.tsx","components/pages/contact-check.tsx","constants/regex.ts","services/validation.tsx","constants/error.ts","components/atoms/select.tsx","components/molecules/select-list.tsx","components/molecules/text-form-list.tsx","components/pages/service.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["COLORS","BREAK_POINTS","se","x","mini","sp","tab","pc","max","maxsize","minsize","min","TEXT_STYLE","ROBOTO","white","border","G_NAV","FOOTER_TEXT","PAGES","Object","freeze","HOME","ABOUT","SERIVCE","SERIVCE_VIEW","CONTACT","CONTACT_VIEW","GlobalNav","location","useLocation","useState","pathname","select","setSelect","useEffect","css","style","className","to","SvgIcon","component","HomeIcon","fontSize","ChatIcon","FavoriteIcon","MailIcon","green","lightGreen","Footer","props","this","children","Component","Header","src","Logo","alt","ABOUT_HEADER","ABOUT_TEXT","ABOUT_LINK","PAY_EXPLAIN_URL","About","map","value","index","key","href","CONTACT_HEADER","CONTACT_WARN_TEXT","Button","disable","type","onClick","text","yellow","black","gray","Input","header","id","String","onChange","onBlur","TextArea","Contact","history","useHistory","name","nameChange","useCallback","event","target","textChange","push","state","HOME_HEADER","HOME_TEXT","HOME_CONTRACT_TEXT","Home","console","log","find","element","Granpa","red","INPUT_CHECK_TITLE","INPUT_CHECK_BUTTON","SERVICE_HEADER","SERVICE_CONTRACTOR_TEXT","SERVICE_RECEIVER_TEXT","SERVICE_SELECT_TEXT","SERVICE_TYPE_VALUE","SERVICE_PAY_VALUE","TextViewList","ServiceCheck","contractorData","receiverData","pay","ContactCheck","data","REGEX_FULLWIDTH","REGEX_FULLWIDTH_ALPHABET_AND_KATAKANA","Form","lengthLimit","errorContent","validateData","indexOf","replace","isEmpty","ERR_0001","length","maxLength","ERR_0004","match","ERR_0005","isPhoneNumber","Select","option","defaultChecked","SelectList","selectData","TextFormList","error","Serivce","setType","setPay","contractorError","setContractorError","receiverError","setReceiverError","buttonDisable","setButtonDisable","forEach","contractorChange","Number","receiverChange","validate","validateType","validateValue","result","splice","errorNum","typeChange","currentTarget","payChange","App","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.738222a0.chunk.js","sourcesContent":["/* eslint-disable no-shadow */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\ninterface BreakPointObject {\n  se: number;\n  x: number;\n  mini: number;\n  sp: number;\n  tab: number;\n  pc: number;\n}\n\nexport const BREAK_POINTS: BreakPointObject = {\n  se: 360,\n  x: 375,\n  mini: 414,\n  sp: 640,\n  tab: 768,\n  pc: 960,\n};\nexport const max = (\n  maxsize: keyof BreakPointObject,\n  minsize?: keyof BreakPointObject,\n) =>\n  minsize\n    ? `@media (max-width: ${BREAK_POINTS[maxsize] - 1}px) and (min-width: ${\n        BREAK_POINTS[minsize]\n      }px)`\n    : `@media (max-width: ${BREAK_POINTS[maxsize] - 1}px)`;\nexport const min = (\n  minsize: keyof BreakPointObject,\n  maxsize?: keyof BreakPointObject,\n) =>\n  maxsize\n    ? `@media (min-width: ${BREAK_POINTS[minsize]}px) and (max-width: ${\n        BREAK_POINTS[maxsize] - 1\n      }px)`\n    : `@media (min-width: ${BREAK_POINTS[minsize]}px)`;\nexport const toVw = (number: number) =>\n  `font-size:${Math.round((number / 375) * 1000) / 10}vw;`;\n\ntype ValueOf<T> = T[keyof T];\nexport const replaceToVW = (\n  textStyle: ValueOf<TEXT_STYLE> | ValueOf<ROBOTO>,\n) => {\n  const fontSize = String(textStyle)\n    .split('\\n')\n    .filter(str => str.indexOf('font-size') !== -1)[0]\n    .match(/[0-9]{1,3}/);\n  const vwNum = Math.round((Number(fontSize) / 375) * 1000) / 10;\n  const newFontSize = `font-size:${vwNum}vw`;\n  const result = String(textStyle).replace(\n    /font-size:[0-9]{1,3}px/,\n    newFontSize,\n  );\n  return result;\n};\n\nexport const hex2rgba = (hex: string, alpha = 1) => {\n  const [r, g, b] = hex.match(/\\w\\w/g)!.map(x => parseInt(x, 16));\n  return `rgba(${r},${g},${b},${alpha})`;\n};\n\nexport const bounceEaseInOut = 'cubic-bezier(0.8, -1.48, 0.32, 2.06)';\n\nexport enum COLORS {\n  lightYellow = '#FDE77D',\n  yellow = '#FFDE48',\n  ornage = '#FCC800',\n  green = '#559E37',\n  lightGreen = '#DFEDCA',\n  red = '#F22222',\n  pink = '#FDDDDD',\n  base = '#F2F2F2',\n  black = '#36352F',\n  gray = '#808080',\n  border = '#EDEDED',\n  input = '#acacac',\n  white = '#ffffff',\n  background = '#FFFCF2',\n}\n\nexport const BGCOtokuBody = [\n  '#F5DA73',\n  '#FFAAAA',\n  '#FFC1A0',\n  '#FFB4C5',\n  '#C9E07D',\n  '#D4A6D6',\n  '#B8B8ED',\n  '#90DBE5',\n  '#EDD552',\n  '#FDC324',\n  '#FFAB5A',\n  '#50BE91',\n];\n\nexport const BGCOtokuBottom = [\n  '#CB4949',\n  '#865050',\n  '#D86881',\n  '#6DA21A',\n  '#18A287',\n  '#7673BE',\n  '#B167B4',\n  '#E86894',\n  '#445993',\n  '#B95395',\n  '#B94568',\n  '#C34141',\n];\n\nexport enum TEXT_STYLE {\n  h0 = `\n\t\tfont-size:24px;\n\t\tfont-weight:600;\n\t\t`,\n  h1 = `\n\t\tfont-size:20px;\n\t\tfont-weight:600;\n\t\t`,\n  button = `\n\t\tfont-size:16px;\n\t\tfont-weight:600;\n\t\t`,\n  h2 = `\n\t\tfont-size:14px;\n\t\tfont-weight:600;\n\t\t`,\n  titleBar = `\n\t\tfont-size:15px;\n\t\tfont-weight:600;\n\t\t`,\n  textBig = `\n\t\tfont-size:14px;\n\t\tfont-weight:400;\n\t\t`,\n  textMiddleBold = `\n\t\tfont-size:12px;\n\t\tfont-weight:600;\n\t\t`,\n  textMiddle = `\n\t\tfont-size:12px;\n\t\tfont-weight:400;\n\t\t`,\n  textSmollBold = `\n\t\tfont-size:10px;\n\t\tfont-weight:600;\n\t\t`,\n  textSmollRegular = `\n\t\tfont-size:10px;\n\t\tfont-weight:400;\n    `,\n  indent = `\n    text-indent: -1em;\n    padding-left: 1em;\n  `,\n}\n\nexport enum ROBOTO {\n  fontFamily = `\n\t\tfont-family: 'Roboto', sans-serif;\n\t`,\n  size00 = `\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tfont-size:48px;\n\t\tfont-weight:500;\n\t`,\n  size01 = `\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tfont-size:42px;\n\t\tfont-weight:500;\n\t`,\n  size02 = `\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tfont-size:32px;\n\t\tfont-weight:500;\n\t`,\n  size03M = `\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tfont-size:24px;\n\t\tfont-weight:500;\n\t`,\n  size03N = `\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tfont-size:24px;\n\t\tfont-weight:400;\n\t`,\n  size04 = `\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tfont-size:20px;\n\t\tfont-weight:400;\n\t`,\n  size05M = `\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tfont-size:14px;\n\t\tfont-weight:500;\n\t`,\n  size05N = `\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tfont-size:14px;\n\t\tfont-weight:400;\n\t`,\n}\n\nexport const LAYOUTS = {\n  outer: `\n\t\tmargin:0 auto;\n\t\t`,\n  content: `\n\t\tmax-width:1060px;\n\t\tmargin:0 auto;\n\t\t${min('pc')}{\n\t\t\tpadding-left:50px;\n\t\t\tpadding-right:50px;\n\t\t}\n\t\t${max('pc', 'sp')}{\n      width:640px;\n      padding-left:0;\n      padding-right:0;\n\t\t}\n\t\t${max('sp')}{\n\t\t\tpadding-left:0;\n\t\t\tpadding-right:0;\n\t\t}\n  `,\n  box: `\n  background-color: ${COLORS.white};\n  margin-top: 12px;\n  ${min('sp')} {\n    padding: 24px;\n    border-radius: 8px;\n    border: 1px solid ${COLORS.border};\n  }\n  ${max('sp')}{\n    padding: 16px 0 16px 16px;\n  }\n  `,\n  block: `\n  margin-top: 12px;\n  padding:0 16px;\n  ${min('sp')}{\n    padding:0 24px;\n  }\n  `,\n};\n","export default __webpack_public_path__ + \"static/media/otoshi-dama.6179d8fe.png\";","export const G_NAV: string[] = ['ホーム', 'サービス', 'お申し込み', 'ご質問'];\n\nexport const FOOTER_TEXT: string[] = ['Copyright', ' Ryohei Terao '];\n","export const PAGES = Object.freeze({\n  /** ホーム画面 */\n  HOME: `/`,\n  /** サービス説明画面 */\n  ABOUT: `/about`,\n  /** 申し込み画面 */\n  SERIVCE: `/service`,\n  /** 申し込み確認画面 */\n  SERIVCE_VIEW: `/service/view`,\n  /** 問い合わせ画面 */\n  CONTACT: `/contact`,\n  /** 問い合わせ確認画面 */\n  CONTACT_VIEW: `/contact/view`,\n});\n","import React, { useEffect, useState } from 'react';\nimport { css } from '@emotion/react';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { SvgIcon } from '@material-ui/core';\nimport { Link, useLocation } from 'react-router-dom';\nimport { max, min, COLORS } from '../../../style';\nimport { G_NAV } from '../../../constants/common';\nimport { PAGES } from '../../../constants/pages';\n\nexport function GlobalNav(): React.ReactElement {\n  const location = useLocation();\n  const [select, setSelect] = useState(location.pathname);\n\n  useEffect(() => {\n    setSelect(location.pathname);\n  }, [location.pathname]);\n\n  return (\n    <div css={style} className=\"GlobalNav\">\n      <ul className=\"navWrap\">\n        <li className={`${select === PAGES.HOME && 'select'}`}>\n          <Link to={PAGES.HOME}>\n            <SvgIcon className=\"icon\" component={HomeIcon} fontSize=\"large\" />\n            <span>{G_NAV[0]}</span>\n          </Link>\n        </li>\n        <li className={`${select === PAGES.ABOUT && 'select'}`}>\n          <Link to={PAGES.ABOUT}>\n            <SvgIcon className=\"icon\" component={ChatIcon} fontSize=\"large\" />\n            <span>{G_NAV[1]}</span>\n          </Link>\n        </li>\n        <li className={`${select === PAGES.SERIVCE && 'select'}`}>\n          <Link to={PAGES.SERIVCE}>\n            <SvgIcon\n              className=\"icon\"\n              component={FavoriteIcon}\n              fontSize=\"large\"\n            />\n            <span>{G_NAV[2]}</span>\n          </Link>\n        </li>\n\n        <li className={`${select === PAGES.CONTACT && 'select'}`}>\n          <Link to={PAGES.CONTACT}>\n            <SvgIcon className=\"icon\" component={MailIcon} fontSize=\"large\" />\n            <span>{G_NAV[3]}</span>\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nconst style = css`\n  width: 100%;\n  .navWrap {\n    width: 100%;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-justify-content: flex-end;\n    justify-content: flex-end;\n    -webkit-align-items: flex-end;\n    align-items: flex-end;\n    padding: 5px 0;\n    li {\n      cursor: pointer;\n      ${min('sp')} {\n        :after {\n          padding: 0 5px;\n          content: '/';\n        }\n        &:last-of-type:after {\n          content: '';\n        }\n        .icon {\n          display: none;\n        }\n        &.select {\n          a {\n            color: ${COLORS.green};\n            border-bottom: solid 1px ${COLORS.green};\n            padding-bottom: 2px;\n          }\n        }\n      }\n      ${max('sp')} {\n        border-top: 1px ${COLORS.green} solid;\n        border-bottom: 1px ${COLORS.green} solid;\n        background-color: ${COLORS.lightGreen};\n        padding: 5px 10px;\n        flex: 1;\n        display: -webkit-flex;\n        display: flex;\n        flex-direction: column;\n        -webkit-flex-direction: column;\n        -webkit-justify-content: space-between;\n        justify-content: space-between;\n        -webkit-align-items: center;\n        align-items: center;\n        text-align: center;\n        &.select {\n          background-color: ${COLORS.green};\n          a {\n            color: ${COLORS.white};\n          }\n        }\n        span {\n          font-family: MV Boil;\n          display: block;\n        }\n        .icon {\n          width: 100%;\n          display: block;\n        }\n      }\n    }\n  }\n`;\n","/* eslint-disable react/prefer-stateless-function */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-useless-constructor */\nimport { css } from '@emotion/react';\nimport React, { Component } from 'react';\nimport { FOOTER_TEXT } from '../../../constants/common';\nimport { COLORS, max } from '../../../style';\n\nclass Footer extends Component {\n  constructor(props: never) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.children}\n        <div css={style} className=\"Footer\">\n          <p>\n            <small>\n              {FOOTER_TEXT[0]}&copy;{FOOTER_TEXT[1]}\n              <br className=\"sp\" />\n            </small>\n          </p>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Footer;\n\nconst style = css`\n  background-color: ${COLORS.green};\n  margin-top: 64px;\n  text-align: center;\n  color: ${COLORS.white};\n  padding: 23px 0;\n  ${max('sp')} {\n    display: none;\n  }\n  ${max('pc', 'tab')} {\n    padding-bottom: 66px;\n  }\n  ${max('tab')} {\n    padding-bottom: 41px;\n  }\n`;\n","/* eslint-disable react/prefer-stateless-function */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-useless-constructor */\nimport React, { Component } from 'react';\nimport { css } from '@emotion/react';\nimport { Link } from 'react-router-dom';\nimport Logo from '../../../assets/otoshi-dama.png';\nimport { GlobalNav } from './g-nav';\nimport { max, min } from '../../../style';\nimport Footer from './footer';\nimport { PAGES } from '../../../constants/pages';\n\nclass Header extends Component {\n  constructor(props: never) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        <div css={style} className=\"Header\">\n          <div className=\"logo\">\n            <Link to={PAGES.HOME}>\n              <img src={Logo} alt=\"\" />\n            </Link>\n          </div>\n          <div className=\"g-nav\">\n            <GlobalNav />\n          </div>\n        </div>\n        <Footer>{this.props.children}</Footer>\n      </>\n    );\n  }\n}\n\nexport default Header;\n\nconst style = css`\n  display: flex;\n  display: -webkit-flex;\n  ${max('sp')} {\n    -webkit-flex-direction: column;\n    flex-direction: column;\n    -webkit-justify-content: center;\n    justify-content: center;\n    -webkit-align-items: center;\n    align-items: center;\n    .logo {\n      width: 40%;\n    }\n    .g-nav {\n      flex-grow: 1;\n      width: 100%;\n    }\n  }\n  ${min('sp')} {\n    .logo {\n      width: 30%;\n    }\n    .g-nav {\n      flex-grow: 1;\n      width: 100%;\n    }\n  }\n`;\n","export const ABOUT_TITLE = '選べる三つのお年玉';\n\nexport const ABOUT_EXPLAIN =\n  'さまざまな形でお年玉を利用できるように三種類のお年玉を用意しました\\n使って欲しい用途などのご希望に合わせてご選択ください';\n\nexport const ABOUT_HEADER: string[] = [\n  '・Amazon（アマゾン）ギフト券',\n  '・図書カード',\n  '・QUO（クオ）カード',\n];\n\nexport const ABOUT_TEXT = [\n  '最大手通販サイトのAmazonで使えるギフト券を贈るプランです\\n多くの商品から選べるため買うものを自由に選んでもらいたい時にオススメです\\n金額は三種類から選べます',\n  '全国の書店等で利用できるカードです\\n読書が好きなお孫さんや家族がいる方にオススメです\\n金額は二種類から選べます',\n  '全国約6万店舗で利用できるカードです\\nお食事からファッションまでさまざまな場面で利用できます\\n金額は二種類から選べます',\n];\n\nexport const ABOUT_LINK: string[] = ['詳細は', 'コチラ'];\n","export const PAY_EXPLAIN_URL: string[] = [\n  'https://www.amazon.co.jp/Amazon-VariableDenomination-Amazon%E3%82%AE%E3%83%95%E3%83%88%E5%88%B8-%E5%95%86%E5%93%81%E5%88%B8%E3%82%BF%E3%82%A4%E3%83%97-%E9%87%91%E9%A1%8D%E8%87%AA%E7%94%B1%E8%A8%AD%E5%AE%9A/dp/B07BYFCVJP/ref=lp_6111481051_1_1',\n  'https://www.toshocard.com/bookstore/',\n  'https://www.quocard.com/about/',\n];\n","import { css } from '@emotion/react';\nimport React from 'react';\nimport {\n  ABOUT_EXPLAIN,\n  ABOUT_HEADER,\n  ABOUT_LINK,\n  ABOUT_TEXT,\n  ABOUT_TITLE,\n} from '../../constants/about';\nimport { PAY_EXPLAIN_URL } from '../../constants/url';\nimport { COLORS, min } from '../../style';\n\nexport function About(): React.ReactElement {\n  return (\n    <div css={style} className=\"About\">\n      <div className=\"head\">\n        <h1>{ABOUT_TITLE}</h1>\n        <p>{ABOUT_EXPLAIN}</p>\n      </div>\n      <div className=\"explain\">\n        {ABOUT_HEADER.map((value: string, index: number) => (\n          <div key={value} className=\"colmun\">\n            <h2>{value}</h2>\n            <p>{ABOUT_TEXT[index]}</p>\n            <p className=\"link\">\n              {ABOUT_LINK[0]}\n              <a href={PAY_EXPLAIN_URL[index]}>{ABOUT_LINK[1]}</a>\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst style = css`\n  width: 100%;\n  .head {\n    margin-bottom: 20px;\n  }\n  .colmun {\n    margin: 10px 0 20px 0;\n    ${min('sp')} {\n      margin: 10px 10px 20px 10px;\n    }\n    h2 {\n      display: inline;\n      border-bottom: solid 3px ${COLORS.green};\n      padding-bottom: 2px;\n    }\n    .link {\n      font-size: 16px;\n      a {\n        text-decoration: underline;\n      }\n    }\n  }\n`;\n","export const CONTACT_TITLE = 'お問い合わせ';\n\nexport const CONTACT_HEADER: string[] = ['お名前', 'お問い合わせ内容'];\n\nexport const CONTACT_WARN_TEXT: string[] = [\n  '※対応時間は平日10:00~19:00となります',\n  '※返答にお時間をいただく場合がございます',\n];\n\nexport const CONTACT_BUTTON = '送信する';\n","import { css } from '@emotion/react';\nimport React from 'react';\nimport { COLORS } from '../../style';\n\nexport type InputProps = {\n  text: string;\n  className?: string;\n  disable?: boolean;\n  onClick?: () => void;\n};\n\nexport function Button(props: InputProps): React.ReactElement {\n  return (\n    <div css={style} className=\"Button\">\n      <button\n        className={`${props.className} ${props.disable && 'disable'}`}\n        type=\"button\"\n        onClick={props.onClick}\n      >\n        {props.text}\n      </button>\n    </div>\n  );\n}\n\nconst style = css`\n  width: 100%;\n  display: flex;\n  display: -webkit-flex;\n  -webkit-align-items: center;\n  align-items: center;\n  -webkit-justify-content: center;\n  justify-content: center;\n  button {\n    text-align: center;\n    background-color: ${COLORS.green};\n    color: ${COLORS.white};\n    border-radius: 50px;\n    padding: 20px 80px;\n    margin-bottom: 20px;\n    font-weight: bold;\n    font-size: 20px;\n    &.yellow {\n      background-color: ${COLORS.yellow};\n      color: ${COLORS.black};\n    }\n    &.disable {\n      background-color: ${COLORS.gray};\n      pointer-events: none;\n    }\n  }\n`;\n","import { css } from '@emotion/react';\nimport React from 'react';\nimport { COLORS } from '../../style';\n\nexport type InputProps = {\n  id?: number;\n  header: string;\n  className?: string;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;\n};\n\nexport function Input(props: InputProps): React.ReactElement {\n  return (\n    <div css={style} className=\"Input\">\n      <p>{props.header}</p>\n      <input\n        className={`${props.className}`}\n        id={String(props.id)}\n        type=\"text\"\n        onChange={props.onChange}\n        onBlur={props.onBlur}\n      />\n    </div>\n  );\n}\n\nconst style = css`\n  width: 100%;\n  .error {\n    background-color: ${COLORS.yellow};\n  }\n`;\n","import { css } from '@emotion/react';\nimport React from 'react';\nimport { COLORS } from '../../style';\n\nexport type TextAreaProps = {\n  header: string;\n  className?: string;\n  onChange?: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n};\n\nexport function TextArea(props: TextAreaProps): React.ReactElement {\n  return (\n    <div css={style} className={`TextArea ${props.className}`}>\n      <p>{props.header}</p>\n      <textarea onChange={props.onChange} />\n    </div>\n  );\n}\n\nconst style = css`\n  width: 100%;\n  textarea {\n    border: solid 1px ${COLORS.gray};\n    background-color: #eff6e4;\n    display: block;\n    font-size: 16px;\n    width: 100%;\n    max-width: 100%;\n    overflow-x: hidden;\n    min-height: 200px;\n  }\n`;\n","import { css } from '@emotion/react';\nimport React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  CONTACT_BUTTON,\n  CONTACT_HEADER,\n  CONTACT_TITLE,\n  CONTACT_WARN_TEXT,\n} from '../../constants/contact';\nimport { PAGES } from '../../constants/pages';\nimport { COLORS } from '../../style';\nimport { Button } from '../atoms/button';\nimport { Input } from '../atoms/input';\nimport { TextArea } from '../atoms/text-area';\n\nexport function Contact(): React.ReactElement {\n  const history = useHistory();\n\n  let name = '';\n  let text = '';\n\n  const nameChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      name = event.target.value;\n    },\n    [name],\n  );\n\n  const textChange = useCallback(\n    (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n      text = event.target.value;\n    },\n    [text],\n  );\n\n  return (\n    <div css={style} className=\"Contact\">\n      <div className=\"head\">\n        <h1>{CONTACT_TITLE}</h1>\n      </div>\n      <div className=\"form\">\n        <Input header={CONTACT_HEADER[0]} onChange={nameChange} />\n      </div>\n      <div className=\"form\">\n        <TextArea header={CONTACT_HEADER[1]} onChange={textChange} />\n      </div>\n      <div className=\"warn\">\n        {CONTACT_WARN_TEXT.map((value: string) => (\n          <p>{value}</p>\n        ))}\n      </div>\n      <div className=\"buttonWrap\">\n        <Button\n          text={CONTACT_BUTTON}\n          onClick={() => {\n            history.push({\n              pathname: PAGES.CONTACT_VIEW,\n              state: { name, text },\n            });\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nconst style = css`\n  width: 100%;\n  .warn {\n    font-size: 16px;\n    color: ${COLORS.gray};\n    margin-bottom: 10px;\n  }\n  .head {\n    margin-bottom: 20px;\n  }\n  .form {\n    margin: 20px 0;\n    input {\n      border: solid 1px ${COLORS.gray};\n    }\n    textarea {\n      border: solid 1px ${COLORS.gray};\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/grandpa.fedf911b.jpg\";","export const HOME_HEADER: string[] = [\n  'お年玉もリモートへ',\n  '選べる、選んでもらえるお年玉',\n];\n\nexport const HOME_TEXT: string[] = [\n  'コロナ禍が騒がれる今、家族に会うのも一苦労...\\nそんな時代でも大切なお孫さんにイベントぐらいは楽しんでもらいたい\\n現金を郵送するのは味気ないけど、何を送ればいいのか分からない\\nそんなあなたの代わりに私たちが心を込めてお年玉をお届けします',\n  '3種類のお年玉から選んでお送りすることができます\\n選んで送っていただくこともできますし、送ってからお孫さんや親御さんに選んでもらう事もできます\\n選んでもらう場合でもしっかり説明書きを同封するのでお孫さんのご家族に迷惑をかける事はありません',\n];\n\nexport const HOME_CONTRACT_LIMIT = ' 12/31 ';\nexport const HOME_CONTRACT_COMPLETE = ' 1/1 ';\n\nexport const HOME_CONTRACT_HEADER = 'お年玉で想いを届けよう';\nexport const HOME_CONTRACT_TEXT: string[] = [\n  'までのお申し込みで',\n  'に届くように手配できます',\n];\n\nexport const HOME_BUTTON = 'お申し込みはコチラ';\n","import { css } from '@emotion/react';\nimport React from 'react';\nimport Granpa from '../../assets/grandpa.jpg';\nimport {\n  HOME_BUTTON,\n  HOME_CONTRACT_COMPLETE,\n  HOME_CONTRACT_LIMIT,\n  HOME_HEADER,\n  HOME_TEXT,\n  HOME_CONTRACT_TEXT,\n  HOME_CONTRACT_HEADER,\n} from '../../constants/home';\nimport { COLORS, min } from '../../style';\nimport { Button } from '../atoms/button';\n\nexport function Home(): React.ReactElement {\n  const a = [1, 2, 3, 4, 5];\n  console.log(a.find(element => element > 10));\n  return (\n    <div css={style} className=\"Home\">\n      <div className=\"banner\">\n        <img src={Granpa} alt=\"\" />\n      </div>\n      <div className=\"explain\">\n        {HOME_HEADER.map((value: string, index: number) => (\n          <div className=\"colmun\">\n            <h1>{value}</h1>\n            <p>{HOME_TEXT[index]}</p>\n          </div>\n        ))}\n      </div>\n      <div className=\"contract\">\n        <h1>{HOME_CONTRACT_HEADER}</h1>\n        <p>\n          <span className=\"red\">{HOME_CONTRACT_LIMIT}</span>\n          {HOME_CONTRACT_TEXT[0]}\n          <span className=\"red border\">{HOME_CONTRACT_COMPLETE}</span>\n          {HOME_CONTRACT_TEXT[1]}\n        </p>\n        <Button text={HOME_BUTTON} className=\"yellow\" />\n      </div>\n    </div>\n  );\n}\n\nconst style = css`\n  width: 100%;\n  .banner {\n    margin-bottom: 20px;\n  }\n  .colmun {\n    margin: 10px 0 20px 0;\n    ${min('sp')} {\n      margin: 10px 10px 20px 10px;\n    }\n    h1 {\n      display: inline;\n      border-bottom: solid 3px ${COLORS.green};\n      padding-bottom: 2px;\n    }\n    p {\n      display: block;\n      margin-top: 10px;\n    }\n  }\n  .contract {\n    text-align: center;\n    background-color: ${COLORS.lightGreen};\n    padding: 20px 10px;\n    h1 {\n      display: inline;\n      background-color: ${COLORS.green};\n      border-radius: 10px;\n      padding: 5px;\n    }\n    .red {\n      color: ${COLORS.red};\n      font-size: 20px;\n      font-weight: bold;\n    }\n    .border {\n      border-bottom: solid 3px ${COLORS.red};\n      padding-bottom: 2px;\n    }\n  }\n  .Button {\n    margin-top: 20px;\n  }\n`;\n","export const INPUT_CHECK_TITLE = '内容の確認';\n\nexport const INPUT_CHECK_BUTTON = ['確認して申し込む', '確認して送信する'];\n","export const SERVICE_TEXT = 'お申し込み';\n\nexport const SERVICE_HEADER: string[] = [\n  '申し込み者さまの情報',\n  '受け取り人さまの情報',\n  '贈るお年玉の選択',\n];\n\nexport const SERVICE_CONTRACTOR_TEXT: string[] = [\n  '申し込み者さまの名字（漢字）',\n  '申し込み者さまの名前（漢字）',\n  '申し込み者さまの名字（カタカナ）',\n  '申し込み者さまの名前（カタカナ）',\n  '申し込み者さまの電話番号',\n  '申し込み者さまの住所',\n];\nexport const SERVICE_RECEIVER_TEXT: string[] = [\n  '受け取り人さまの名字（漢字）',\n  '受け取り人さまの名前（漢字）',\n  '受け取り人さまの名字（カタカナ）',\n  '受け取り人さまの名前（カタカナ）',\n  '受け取り人さまの電話番号',\n  '受け取り人さまの住所',\n];\n\nexport const SERVICE_SELECT_TEXT: string[] = ['種類', '金額'];\n\nexport const SERVICE_TYPE_VALUE: string[] = [\n  'Amazon（アマゾン）ギフト券',\n  '図書カード',\n  'QUO（クオ）カード',\n];\nexport const SERVICE_PAY_VALUE: string[] = ['1,000円', '5,000円', '10,000円'];\n\nexport const SERVICE_BUTTON = '申し込む';\n","import { css } from '@emotion/react';\nimport React from 'react';\nimport { COLORS, min } from '../../style';\n\nexport type TextViewProps = {\n  header: string[];\n  text: string[];\n};\n\nexport function TextViewList(props: TextViewProps): React.ReactElement {\n  return (\n    <div css={style} className=\"TextFormList\">\n      <ul>\n        {props.header.map((value: string, index: number) => (\n          <>\n            {props.text[index] !== '' && (\n              <li key={value}>\n                <h2>{value}</h2>\n                <p>{props.text[index]}</p>\n              </li>\n            )}\n          </>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nconst style = css`\n  width: 100%;\n  margin: 20px 0;\n  padding: 5px 0 0 0;\n  background-color: ${COLORS.white};\n  ${min('sp')} {\n    margin: 10px 10px 20px 10px;\n    padding: 10px 10px 20px 10px;\n    border-radius: 10px;\n  }\n  ul {\n    li {\n      padding: 10px;\n      border-bottom: solid 1px ${COLORS.border};\n      p {\n        margin-bottom: 5px;\n      }\n    }\n  }\n`;\n","import { css } from '@emotion/react';\nimport React from 'react';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport {\n  INPUT_CHECK_BUTTON,\n  INPUT_CHECK_TITLE,\n} from '../../constants/input-check';\nimport { PAGES } from '../../constants/pages';\nimport {\n  SERVICE_CONTRACTOR_TEXT,\n  SERVICE_RECEIVER_TEXT,\n  SERVICE_SELECT_TEXT,\n} from '../../constants/service';\nimport { Button } from '../atoms/button';\nimport { TextViewList } from '../molecules/text-view-list';\n\ntype ServiceCheckProps = RouteComponentProps<\n  {},\n  {},\n  {\n    contractorData: string[];\n    receiverData: string[];\n    pay: string;\n    type: string;\n  }\n>;\n\nexport function ServiceCheck(props: ServiceCheckProps): React.ReactElement {\n  const history = useHistory();\n  console.log(props.location.state);\n  return (\n    <div css={style} className=\"ServiceCheck\">\n      <div className=\"head\">\n        <h1>{INPUT_CHECK_TITLE}</h1>\n      </div>\n      <div className=\"form\">\n        <TextViewList\n          header={SERVICE_CONTRACTOR_TEXT}\n          text={props.location.state.contractorData}\n        />\n      </div>\n      <div className=\"form\">\n        <TextViewList\n          header={SERVICE_RECEIVER_TEXT}\n          text={props.location.state.receiverData}\n        />\n      </div>\n      <div className=\"form\">\n        <TextViewList\n          header={SERVICE_SELECT_TEXT}\n          text={[props.location.state.type, props.location.state.pay]}\n        />\n      </div>\n      <div className=\"buttonWrap\">\n        <Button\n          text={INPUT_CHECK_BUTTON[0]}\n          onClick={() => {\n            history.push({\n              pathname: PAGES.SERIVCE_VIEW,\n            });\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nconst style = css`\n  width: 100%;\n  .head {\n    margin-bottom: 20px;\n  }\n`;\n","import { css } from '@emotion/react';\nimport React from 'react';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { CONTACT_HEADER } from '../../constants/contact';\nimport {\n  INPUT_CHECK_BUTTON,\n  INPUT_CHECK_TITLE,\n} from '../../constants/input-check';\nimport { PAGES } from '../../constants/pages';\nimport { Button } from '../atoms/button';\nimport { TextViewList } from '../molecules/text-view-list';\n\ntype ContactCheckProps = RouteComponentProps<\n  {},\n  {},\n  {\n    name: string;\n    data: string;\n  }\n>;\n\nexport function ContactCheck(props: ContactCheckProps): React.ReactElement {\n  const history = useHistory();\n\n  return (\n    <div css={style} className=\"ContactCheck\">\n      <div className=\"head\">\n        <h1>{INPUT_CHECK_TITLE}</h1>\n      </div>\n      <div className=\"form\">\n        <TextViewList\n          header={[CONTACT_HEADER[0]]}\n          text={[props.location.state.name]}\n        />\n      </div>\n      <div className=\"form\">\n        <TextViewList\n          header={[CONTACT_HEADER[1]]}\n          text={[props.location.state.data]}\n        />\n      </div>\n      <div className=\"buttonWrap\">\n        <Button\n          text={INPUT_CHECK_BUTTON[1]}\n          onClick={() => {\n            history.push({\n              pathname: PAGES.CONTACT_VIEW,\n            });\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nconst style = css`\n  width: 100%;\n  .head {\n    margin-bottom: 20px;\n  }\n`;\n","export const REGEX_PASSWORD = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,16}$/;\nexport const REGEX_EMAIL = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\nexport const REGEX_ZIP_CODE = /^[0-9０-９]{3}-?[0-9０-９]{4}$/;\nexport const REGEX_SPECIAL_CHARACTERS = /[ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩⅪⅫⅰⅱⅲⅳⅴⅵⅶⅷⅸⅹⅺⅻ]/;\nexport const REGEX_CONTAINS_ONLY_KATAKANA = /^[ァ-ンー－（）゛]+$/;\n// eslint-disable-next-line no-irregular-whitespace\nexport const REGEX_SYMBOL = /[§¨°±´¶×÷‐―‘’“”†‡‥…‰′″※℃Å←↑→↓⇒⇔∀∂∃∇∈∋√∝∞∠∧∨∩∪∫∬∴∵∽≒≠≡≦≧≪≫⊂⊃⊆⊇⊥⌒■□▲△▼▽◆◇○◎●◯★☆♀♂♪♭♯、。〃々〆〇〈〉《》「」『』【】〒〓〔〕゛゜ゝゞ・ーヽヾ仝！＃＄％＆（）＊＋，－．／：；＜＝＞？＠［＼］＾＿｀｛｜｝～￠￡￢￣￥　]/;\nexport const REGEX_FULLWIDTH = /[^０-９ａ-ｚＡ-Ｚぁ-んァ-ヴ一-龯]/;\nexport const REGEX_FULLWIDTH_ALPHABET_AND_KATAKANA = /[^０-９ａ-ｚＡ-Ｚァ-ンー－（）゛]/;\n","import { isEmpty, isPhoneNumber } from 'class-validator';\nimport {\n  ERR_0001,\n  ERR_0004,\n  ERR_0005,\n  ERR_0007,\n  ERR_0008,\n} from '../constants/error';\nimport {\n  REGEX_FULLWIDTH,\n  REGEX_FULLWIDTH_ALPHABET_AND_KATAKANA,\n} from '../constants/regex';\nimport {\n  SERVICE_CONTRACTOR_TEXT,\n  SERVICE_RECEIVER_TEXT,\n} from '../constants/service';\n\nexport const Form = {\n  validate: (\n    data: string,\n    index: number,\n    type: number,\n    value: 'normal' | 'kana' | 'phone' | 'zip',\n  ): string => {\n    const lengthLimit = [10, 10, 20, 20, 15, 30];\n    let errorContent = SERVICE_CONTRACTOR_TEXT;\n    let validateData = data;\n\n    if (data.indexOf('-') > -1) {\n      validateData = data.replace(/-/g, '');\n    }\n\n    if (type === 1) {\n      errorContent = SERVICE_RECEIVER_TEXT;\n    }\n\n    // 空チェック\n    if (isEmpty(validateData)) {\n      return ERR_0001(errorContent[index]);\n    }\n    // 文字数チェック\n    if (validateData.length > lengthLimit[index]) {\n      return ERR_0004(errorContent[index], lengthLimit[index]);\n    }\n    // 全角チェック\n    if (\n      validateData.match(REGEX_FULLWIDTH) &&\n      (value === 'normal' || value === 'kana')\n    ) {\n      return ERR_0008;\n    }\n\n    // 全角カタカナチェック\n    if (\n      validateData.match(REGEX_FULLWIDTH_ALPHABET_AND_KATAKANA) &&\n      value === 'kana'\n    ) {\n      return ERR_0005(errorContent[index]);\n    }\n    // 日本リージョン電話番号チェック\n    if (!isPhoneNumber(validateData, 'JP') && value === 'phone') {\n      return ERR_0007;\n    }\n\n    return '';\n  },\n};\n","export const ERR_0001 = (data: string) => `${data}を入力してください`;\nexport const ERR_0002 = (data: string, length: number) =>\n  `${data}は${length}文字で入力してください`;\nexport const ERR_0003 = '郵便番号を正しく入力してください';\nexport const ERR_0004 = (data: string, maxLength: number) =>\n  `${data}は${maxLength}文字以内で入力してください`;\nexport const ERR_0005 = (data: string) =>\n  `${data}にご使用いただけない文字が含まれています`;\nexport const ERR_0006 = '入力項目に誤りがあります';\nexport const ERR_0007 = '電話番号を正しく入力してください';\nexport const ERR_0008 = '全角で入力してください';\n","import { css } from '@emotion/react';\nimport React from 'react';\nimport { COLORS, min } from '../../style';\n\nexport type SelectProps = {\n  header: string;\n  option: string[];\n  defaultChecked: number;\n  onChange?: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n};\n\nexport function Select(props: SelectProps): React.ReactElement {\n  return (\n    <div css={style} className=\"Select\">\n      <p>{props.header}</p>\n      <select onChange={props.onChange}>\n        {props.option.map((value: string, index: number) => (\n          <option\n            key={value}\n            value={value}\n            defaultChecked={props.defaultChecked === index}\n          >\n            {value}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nconst style = css`\n  width: 100%;\n  margin: 20px 0;\n  padding: 5px 0 0 0;\n  background-color: ${COLORS.white};\n  position: relative;\n  ${min('sp')} {\n    margin: 10px 10px 20px 10px;\n    padding: 10px 10px 20px 10px;\n    border-radius: 10px;\n  }\n  select {\n    background-color: #eff6e4;\n    display: block;\n    font-size: 16px;\n    padding: 0 40px 0 16px;\n    width: 100%;\n    max-width: 100%;\n    overflow-x: hidden;\n    height: 36px;\n    cursor: pointer;\n  }\n  &:after {\n    display: block;\n    content: '';\n    position: absolute;\n    right: 16px;\n    top: 74%;\n    transform: translateY(-4px);\n    width: 0;\n    height: 0;\n    border-style: solid;\n    border-width: 12px 7px 0 7px;\n    border-color: ${COLORS.green} transparent transparent transparent;\n    pointer-events: none;\n  }\n  ul {\n    li {\n      padding: 10px;\n      border-bottom: solid 1px ${COLORS.border};\n      p {\n        margin-bottom: 5px;\n      }\n    }\n  }\n`;\n","import { css } from '@emotion/react';\nimport React from 'react';\nimport { COLORS, min } from '../../style';\nimport { Select, SelectProps } from '../atoms/select';\n\nexport type SelectListProps = {\n  header: string;\n  selectData: SelectProps[];\n  onChange: ((event: React.ChangeEvent<HTMLSelectElement>) => void)[];\n};\n\nexport function SelectList(props: SelectListProps): React.ReactElement {\n  return (\n    <div css={style} className=\"SelectList\">\n      <h2>{props.header}</h2>\n      {props.selectData.map((value: SelectProps, index: number) => (\n        <Select {...value} onChange={props.onChange[index]} />\n      ))}\n    </div>\n  );\n}\n\nconst style = css`\n  width: 100%;\n  margin: 20px 0;\n  padding: 5px 0 0 0;\n  background-color: ${COLORS.white};\n  padding: 10px;\n  position: relative;\n  border-bottom: solid 1px ${COLORS.border};\n  ${min('sp')} {\n    margin: 10px 10px 20px 10px;\n    padding: 10px 10px 20px 10px;\n    border-radius: 10px;\n  }\n`;\n","import { css } from '@emotion/react';\nimport React from 'react';\nimport { COLORS, min } from '../../style';\nimport { Input } from '../atoms/input';\n\nexport type TypeFormProps = {\n  header: string;\n  text: string[];\n  error?: string[];\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;\n};\n\nexport function TextFormList(props: TypeFormProps): React.ReactElement {\n  return (\n    <div css={style} className=\"TextFormList\">\n      <ul>\n        <h2>{props.header}</h2>\n        {props.text.map((value: string, index: number) => (\n          <li key={value}>\n            <Input\n              id={index}\n              header={value}\n              onChange={props.onChange}\n              onBlur={props.onBlur}\n              className={\n                props.error && props.error[index] !== '' ? 'error' : ''\n              }\n            />\n            <p className=\"error\">{props.error && props.error[index]}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nconst style = css`\n  width: 100%;\n  margin: 20px 0;\n  padding: 5px 0 0 0;\n  background-color: ${COLORS.white};\n  ${min('sp')} {\n    margin: 10px 10px 20px 10px;\n    padding: 10px 10px 20px 10px;\n    border-radius: 10px;\n  }\n  ul {\n    li {\n      padding: 10px;\n      border-bottom: solid 1px ${COLORS.border};\n      p {\n        margin-bottom: 5px;\n        &.error {\n          font-size: 14px;\n          color: ${COLORS.red};\n        }\n      }\n    }\n  }\n`;\n","import { css } from '@emotion/react';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { PAGES } from '../../constants/pages';\nimport {\n  SERVICE_BUTTON,\n  SERVICE_CONTRACTOR_TEXT,\n  SERVICE_HEADER,\n  SERVICE_PAY_VALUE,\n  SERVICE_RECEIVER_TEXT,\n  SERVICE_SELECT_TEXT,\n  SERVICE_TEXT,\n  SERVICE_TYPE_VALUE,\n} from '../../constants/service';\nimport { Form } from '../../services/validation';\nimport { Button } from '../atoms/button';\nimport { SelectList } from '../molecules/select-list';\nimport { TextFormList } from '../molecules/text-form-list';\n\nexport function Serivce(): React.ReactElement {\n  const history = useHistory();\n  const [type, setType] = useState(SERVICE_TYPE_VALUE[0]);\n  const [pay, setPay] = useState(SERVICE_PAY_VALUE[0]);\n  const [contractorError, setContractorError] = useState(['']);\n  const [receiverError, setReceiverError] = useState(['']);\n  const [buttonDisable, setButtonDisable] = useState(true);\n  const contractorData = [''];\n  const receiverData = [''];\n\n  useEffect(() => {\n    SERVICE_CONTRACTOR_TEXT.forEach((value: string, index: number) => {\n      if (index !== 0) {\n        contractorData.push('');\n      }\n    });\n    SERVICE_RECEIVER_TEXT.forEach((value: string, index: number) => {\n      if (index !== 0) {\n        receiverData.push('');\n      }\n    });\n    console.log(receiverData);\n    setContractorError(contractorData);\n    setReceiverError(receiverData);\n  }, []);\n\n  const contractorChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      contractorData[Number(event.target.id)] = event.target.value;\n    },\n    [contractorData],\n  );\n\n  const receiverChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      receiverData[Number(event.target.id)] = event.target.value;\n    },\n    [receiverData],\n  );\n\n  const validate = useCallback(\n    (event: React.FocusEvent<HTMLInputElement>, validateType: number) => {\n      let validateValue: 'normal' | 'kana' | 'phone' | 'zip' = 'normal';\n      if (event.target.id === '2' || event.target.id === '3') {\n        validateValue = 'kana';\n      } else if (event.target.id === '4') {\n        validateValue = 'phone';\n      } else if (event.target.id === '5') {\n        validateValue = 'zip';\n      }\n      const result = Form.validate(\n        event.target.value,\n        Number(event.target.id),\n        validateType,\n        validateValue,\n      );\n      if (validateType === 0) {\n        const error = contractorError.splice(0);\n        error[Number(event.target.id)] = result;\n        setContractorError(error);\n      } else {\n        const error = receiverError.splice(0);\n        error[Number(event.target.id)] = result;\n        setReceiverError(error);\n      }\n      console.log(receiverData);\n    },\n    [contractorError, receiverError],\n  );\n\n  useEffect(() => {\n    let errorNum = 0;\n    contractorError.forEach((value: string) => {\n      if (value !== '') {\n        errorNum += 1;\n      }\n    });\n    receiverError.forEach((value: string) => {\n      if (value !== '') {\n        errorNum += 1;\n      }\n    });\n    if (errorNum > 0) {\n      setButtonDisable(true);\n    } else {\n      setButtonDisable(false);\n    }\n  }, [contractorError, receiverError]);\n\n  const typeChange = useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) => {\n      setType(event.currentTarget.value);\n    },\n    [type],\n  );\n\n  const payChange = useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) => {\n      setPay(event.currentTarget.value);\n    },\n    [pay],\n  );\n\n  return (\n    <div css={style} className=\"Serivce\">\n      <div className=\"head\">\n        <h1>{SERVICE_TEXT}</h1>\n      </div>\n      <TextFormList\n        header={SERVICE_HEADER[0]}\n        text={SERVICE_CONTRACTOR_TEXT}\n        error={contractorError}\n        onChange={contractorChange}\n        onBlur={(event: React.FocusEvent<HTMLInputElement>) => {\n          validate(event, 0);\n        }}\n      />\n      <TextFormList\n        header={SERVICE_HEADER[1]}\n        text={SERVICE_RECEIVER_TEXT}\n        error={receiverError}\n        onChange={receiverChange}\n        onBlur={(event: React.FocusEvent<HTMLInputElement>) => {\n          validate(event, 1);\n        }}\n      />\n      <div className=\"form\">\n        <SelectList\n          header={SERVICE_HEADER[2]}\n          selectData={[\n            {\n              header: SERVICE_SELECT_TEXT[0],\n              option: SERVICE_TYPE_VALUE,\n              defaultChecked: 0,\n            },\n            {\n              header: SERVICE_SELECT_TEXT[1],\n              option: SERVICE_PAY_VALUE,\n              defaultChecked: 0,\n            },\n          ]}\n          onChange={[typeChange, payChange]}\n        />\n      </div>\n      <div className=\"buttonWrap\">\n        <Button\n          text={SERVICE_BUTTON}\n          disable={buttonDisable}\n          onClick={() => {\n            history.push({\n              pathname: PAGES.SERIVCE_VIEW,\n              state: [contractorData, receiverData, type, pay],\n            });\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nconst style = css`\n  width: 100%;\n  .head {\n    margin-bottom: 20px;\n  }\n`;\n","import { css } from '@emotion/react';\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport Header from './components/organisms/common/header';\nimport { About } from './components/pages/about';\nimport { Contact } from './components/pages/contact';\nimport { Home } from './components/pages/home';\nimport { ServiceCheck } from './components/pages/service-check';\nimport { ContactCheck } from './components/pages/contact-check';\nimport { Serivce } from './components/pages/service';\nimport { PAGES } from './constants/pages';\n\nfunction App(): React.ReactElement {\n  return (\n    <div css={style} className=\"main\">\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Header>\n          <Switch>\n            <Route exact path={PAGES.HOME} component={Home} />\n            <Route exact path={PAGES.ABOUT} component={About} />\n            <Route exact path={PAGES.SERIVCE} component={Serivce} />\n            <Route exact path={PAGES.CONTACT} component={Contact} />\n            <Route exact path={PAGES.SERIVCE_VIEW} component={ServiceCheck} />\n            <Route exact path={PAGES.CONTACT_VIEW} component={ContactCheck} />\n          </Switch>\n        </Header>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\nconst style = css`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  min-width: 360px;\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}